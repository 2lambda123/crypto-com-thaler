---
kind: pipeline
name: rust

steps:
- name: Build and Test
  image: cryptocom/chain:latest
  commands:
  - export RUST_BACKTRACE=1
  - export RUSTFLAGS=-Ctarget-feature=+aes,+sse2,+sse4.1,+ssse3
  - export LD_LIBRARY_PATH=$HOME/lib
  - export LIBRARY_PATH=$HOME/lib
  - export PATH=$HOME/.cargo/bin:$HOME/.local/bin:$PATH
  - export PKG_CONFIG_PATH=$HOME/lib/pkgconfig
  - cargo build
  - cargo test
  - echo "HOME FOLDER = " $HOME

---
kind: pipeline
type: exec
name: integration-tests

platform:
  os: linux
  arch: amd64

steps:
- name: Build and Test
  commands:
  - mkdir bin
  - export PATH="$PATH:$PWD/bin"
  - curl -sSL "https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)" -o bin/docker-compose
  - chmod +x bin/docker-compose
  - export NIX_REMOTE=daemon
  - export PATH="$PATH:/nix/var/nix/profiles/default/bin/"
  - export DOCKER_COMPOSE_PREFIX="${DRONE_BRANCH}"
  - . /usr/local/etc/profile.d/nix.sh
  - . /opt/intel/sgxsdk/sgxsdk/environment
  # - nix-channel --add https://nixos.org/channels/nixpkgs-unstable
  # - nix-channel --update
  - nix-shell ci-scripts/drone.nix --run "./ci-scripts/run-integration-tests.sh"
- name: Teardown
  commands:
  - export PATH="$PATH:$PWD/bin"
  - cd integration-tests
  - docker-compose -p "${DRONE_BRANCH}" down || exit 0
  when:
    status:
      - success
      - failure

trigger:
  branch:
  - master
  - staging
  - trying
  event:
  - push

---
kind: pipeline
type: exec
name: sgx-cargo-1804-hw1

platform:
  os: linux
  arch: amd64

steps:
- name: Build and Test
  commands:
  - ls -l /dev/sgx
  - ls -l /var/run/aesmd/aesm.socket
  - docker run --rm -v $PWD:/chain --device /dev/sgx cryptocom/chain:latest /bin/bash /chain/ci-scripts/tx-validation-hw-test.sh

trigger:
  branch:
  - master
  - staging
  - trying
  event:
  - push

---
kind: pipeline
type: exec
name: sgx-cargo-1804-hw2

platform:
  os: linux
  arch: amd64

steps:
- name: Build and Test
  environment:
    SPID:
      from_secret: dev_spid
    IAS_API_KEY:
      from_secret: dev_ias_key
  commands:
  - ls -l /dev/sgx
  - ls -l /var/run/aesmd/aesm.socket
  - docker run --rm --env SPID=$SPID --env IAS_API_KEY=$IAS_API_KEY -v $PWD:/chain --device /dev/sgx cryptocom/chain:latest /bin/bash /chain/ci-scripts/tx-query-hw-test.sh

trigger:
  branch:
  - master
  - staging
  - trying
  event:
  - push

---
kind: signature
hmac: 8e8cafffe61da4485e7a7200b856fad51a872bfe81aa37ef49574dcf323c61be

...
