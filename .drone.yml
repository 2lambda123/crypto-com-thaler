---
kind: pipeline
name: rust

steps:
- name: Build and Test
  image: cryptocom/chain:latest
  commands:
  - export RUST_BACKTRACE=1
  - export RUSTFLAGS=-Ctarget-feature=+aes,+sse2,+sse4.1,+ssse3
  - export LD_LIBRARY_PATH=$HOME/lib
  - export LIBRARY_PATH=$HOME/lib
  - export PATH=$HOME/.cargo/bin:$HOME/.local/bin:$PATH
  - export PKG_CONFIG_PATH=$HOME/lib/pkgconfig
  - cargo build
  - cargo test
  - echo "HOME FOLDER = " $HOME

# TODO: fix, it wasn't that portable / reproducible  
# ---
# kind: pipeline
# type: exec
# name: integration-tests

# platform:
#   os: linux
#   arch: amd64

# steps:
# - name: Build and Test
#   commands:
#   - mkdir bin
#   - export PATH="$PATH:$PWD/bin"
#   - curl -sSL "https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)" -o bin/docker-compose
#   - chmod +x bin/docker-compose
#   - export NIX_REMOTE=daemon
#   - export PATH="$PATH:/nix/var/nix/profiles/default/bin/"
#   - export DOCKER_COMPOSE_PREFIX="${DRONE_BRANCH}"
#   # - . /usr/local/etc/profile.d/nix.sh
#   - . /opt/intel/sgxsdk/sgxsdk/environment
#   # - nix-channel --add https://nixos.org/channels/nixpkgs-unstable
#   # - nix-channel --update
#   - nix-shell ci-scripts/drone.nix --run "./ci-scripts/run-integration-tests.sh"
# - name: Teardown
#   commands:
#   - export PATH="$PATH:$PWD/bin"
#   - cd integration-tests
#   - docker-compose -p "${DRONE_BRANCH}" down || exit 0
#   when:
#     status:
#       - success
#       - failure

# trigger:
#   branch:
#   - master
#   - staging
#   - trying
#   event:
#   - push

---
kind: pipeline
name: sgx-cargo-1804-hw1

steps:
- name: Build and Test
  image: cryptocom/chain:latest
  volumes:
  - name: sgx
    path: /dev/sgx
  - name: aesmd
    path: /var/run/aesmd/aesm.socket
  commands:
  - ci-scripts/tx-validation-hw-test.sh

trigger:
  branch:
  - master
  - staging
  - trying
  event:
  - push

volumes:
- name: sgx
  host:
    path: /dev/sgx
- name: aesmd
  host:
    path: /var/run/aesmd/aesm.socket

---
kind: pipeline
name: sgx-cargo-1804-hw2

steps:
- name: Build and Test
  image: cryptocom/chain:latest
  volumes:
  - name: sgx
    path: /dev/sgx
  - name: aesmd
    path: /var/run/aesmd/aesm.socket
  environment:
    SPID:
      from_secret: dev_spid
    IAS_API_KEY:
      from_secret: dev_ias_key
  commands:
  - ci-scripts/tx-query-hw-test.sh

trigger:
  branch:
  - master
  - staging
  - trying
  event:
  - push

volumes:
- name: sgx
  host:
    path: /dev/sgx
- name: aesmd
  host:
    path: /var/run/aesmd/aesm.socket

---
kind: signature
hmac: 94883af24ff35efe5623683abbe36b1345162ac9a4f197507759c39f25afaa47

...
